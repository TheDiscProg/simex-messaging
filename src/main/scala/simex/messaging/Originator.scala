package simex.messaging

import io.circe.generic.semiauto.{deriveDecoder, deriveEncoder}
import io.circe.{Decoder, Encoder}

/** Defines the originator of the message. Must be generated by the originator of the message.
  * Once set, it should not change
  * @param clientId - the client ID, unique across system, such has hostname
  * @param requestId - request ID
  * @param sourceEndpoint - The resource/sourceEndpoint destination that generated this request
  * @param originalToken - authentication token
  * @param security - the security level - see Security
  * @param messageTTL - optional - how long the collection point should hold the message for
  */
case class Originator(
    clientId: String,
    requestId: String,
    sourceEndpoint: String,
    originalToken: String,
    security: String,
    messageTTL: Option[Long]
)

object Originator {
  implicit val encoder: Encoder[Originator] = deriveEncoder
  implicit val decoder: Decoder[Originator] = deriveDecoder
}
